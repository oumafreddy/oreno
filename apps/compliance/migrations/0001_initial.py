# Generated by Django 5.1.8 on 2025-05-02 10:52

import core.models.validators
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('document_management', '__first__'),
        ('organizations', '0005_archivedorganization_organization_required_archivedorganization_and_more'),
        ('risk', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceFramework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('version', models.CharField(blank=True, max_length=50, null=True)),
                ('regulatory_body', models.CharField(blank=True, max_length=255, null=True)),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceObligation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('obligation_id', models.CharField(db_index=True, max_length=50)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('due_period', models.CharField(max_length=50)),
                ('evidence_required', models.BooleanField(default=True)),
                ('owner_email', models.EmailField(blank=True, help_text='If owner is not a user, enter their email here.', max_length=254, null=True)),
                ('priority', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('due_date', models.DateField(db_index=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('owner', models.ForeignKey(blank=True, help_text='Select a user as owner, or leave blank to specify an email below.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('risk', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='risk.risk')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceEvidence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('validity_start', models.DateField()),
                ('validity_end', models.DateField()),
                ('notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='document_management.document')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('obligation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance.complianceobligation')),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('requirement_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('title', models.CharField(db_index=True, max_length=512)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('policy_section', models.CharField(blank=True, max_length=512, null=True)),
                ('jurisdiction', models.CharField(max_length=100)),
                ('mandatory', models.BooleanField(default=True)),
                ('tags', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('regulatory_framework', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance.complianceframework')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'ordering': ['requirement_id'],
            },
        ),
        migrations.AddField(
            model_name='complianceobligation',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance.compliancerequirement'),
        ),
        migrations.CreateModel(
            name='PolicyDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('title', models.CharField(db_index=True, max_length=512)),
                ('file', models.FileField(upload_to='policy_documents/', validators=[core.models.validators.validate_file_extension, core.models.validators.validate_file_size])),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('effective_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('owner_email', models.EmailField(blank=True, help_text='If owner is not a user, enter their email here.', max_length=254, null=True)),
                ('is_anonymized', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('owner', models.ForeignKey(blank=True, help_text='Select a user as owner, or leave blank to specify an email below.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentProcessing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('ai_model_version', models.CharField(default='1.0', max_length=50)),
                ('parsed_text', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance.policydocument')),
            ],
        ),
        migrations.AddField(
            model_name='compliancerequirement',
            name='policy_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance.policydocument'),
        ),
        migrations.AddIndex(
            model_name='complianceframework',
            index=models.Index(fields=['organization', 'regulatory_body'], name='compliance__organiz_3f52b9_idx'),
        ),
        migrations.AddConstraint(
            model_name='complianceframework',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_complianceframework'),
        ),
        migrations.AlterUniqueTogether(
            name='complianceframework',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='complianceevidence',
            index=models.Index(fields=['validity_start', 'validity_end'], name='compliance__validit_bb6dfe_idx'),
        ),
        migrations.AddConstraint(
            model_name='complianceevidence',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_complianceevidence'),
        ),
        migrations.AddIndex(
            model_name='complianceobligation',
            index=models.Index(fields=['due_date'], name='compliance__due_dat_13b1ff_idx'),
        ),
        migrations.AddIndex(
            model_name='complianceobligation',
            index=models.Index(fields=['status'], name='compliance__status_5e1918_idx'),
        ),
        migrations.AddConstraint(
            model_name='complianceobligation',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_complianceobligation'),
        ),
        migrations.AlterUniqueTogether(
            name='complianceobligation',
            unique_together={('requirement', 'obligation_id')},
        ),
        migrations.AddConstraint(
            model_name='policydocument',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_policydocument'),
        ),
        migrations.AddConstraint(
            model_name='documentprocessing',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_documentprocessing'),
        ),
        migrations.AddIndex(
            model_name='compliancerequirement',
            index=models.Index(fields=['regulatory_framework'], name='compliance__regulat_a01888_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancerequirement',
            index=models.Index(fields=['policy_document'], name='compliance__policy__b21d24_idx'),
        ),
        migrations.AddConstraint(
            model_name='compliancerequirement',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_compliancerequirement'),
        ),
    ]
