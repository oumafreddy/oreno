# Generated by Django 5.1.8 on 2025-04-28 06:52

import core.models.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import django_fsm
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('organizations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditWorkplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('state', django_fsm.FSMField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', help_text='Current approval state.', max_length=50, protected=True, verbose_name='Approval State')),
                ('code', models.CharField(db_index=True, help_text='Unique code for the audit workplan within the organization.', max_length=8, verbose_name='Workplan Code')),
                ('name', models.CharField(db_index=True, help_text='Name of the audit workplan.', max_length=512, verbose_name='Workplan Name')),
                ('fiscal_year', models.PositiveIntegerField(help_text='Fiscal year to which the workplan applies.', verbose_name='Fiscal Year')),
                ('objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Detailed Objectives of the audit workplan.', max_length=512, null=True, verbose_name='Objectives')),
                ('creation_date', models.DateField(auto_now_add=True, help_text='Date when this workplan was created.', verbose_name='Creation Date')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Detailed description of the audit workplan.', max_length=512, null=True, verbose_name='Description')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Audit Workplan',
                'verbose_name_plural': 'Audit Workplans',
                'ordering': ['-creation_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('state', django_fsm.FSMField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='draft', help_text='Current approval state.', max_length=50, protected=True, verbose_name='Approval State')),
                ('code', models.CharField(db_index=True, help_text='Unique code for identifying the engagement within a workplan.', max_length=16, verbose_name='Engagement Code')),
                ('title', models.CharField(max_length=255, verbose_name='Engagement Title')),
                ('engagement_type', models.CharField(blank=True, default='Compliance Audit', max_length=80, null=True, verbose_name='Engagement Type')),
                ('project_start_date', models.DateField(verbose_name='Project Start Date')),
                ('target_end_date', models.DateField(blank=True, null=True, verbose_name='Target End Date')),
                ('executive_summary', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Executive Summary')),
                ('purpose', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Purpose')),
                ('background', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Background')),
                ('scope', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Scope')),
                ('project_objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Project Objectives')),
                ('conclusion_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Conclusion Description')),
                ('conclusion', models.CharField(choices=[('satisfactory', 'Satisfactory'), ('needs_improvement', 'Needs Improvement'), ('unsatisfactory', 'Unsatisfactory')], default='satisfactory', max_length=32, verbose_name='Conclusion')),
                ('project_status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('closed', 'Closed')], db_index=True, default='draft', max_length=32, verbose_name='Project Status')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagements_created', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagements_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('audit_workplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to='audit.auditworkplan', verbose_name='Audit Workplan')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Engagement',
                'verbose_name_plural': 'Engagements',
                'ordering': ['-project_start_date', 'code'],
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(db_index=True, max_length=16, verbose_name='Issue Code')),
                ('issue_title', models.CharField(db_index=True, max_length=512, verbose_name='Issue Title')),
                ('issue_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Issue Description')),
                ('root_cause', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Root Cause')),
                ('risks', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Risks')),
                ('date_identified', models.DateField(verbose_name='Date Identified')),
                ('issue_owner_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Issue Owner Title')),
                ('audit_procedures', django_ckeditor_5.fields.CKEditor5Field(default='Bank reconciliation reperformance', verbose_name='Audit Procedures')),
                ('recommendation', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Recommendation')),
                ('severity_status', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], db_index=True, default='high', max_length=12, verbose_name='Severity')),
                ('issue_status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('closed', 'Closed')], db_index=True, default='open', max_length=56, verbose_name='Issue Status')),
                ('remediation_status', models.CharField(choices=[('open', 'Open'), ('management_remediating', 'Management Remediating'), ('remediated_awaiting_verification', 'Remediated Awaiting Verification'), ('closed', 'Closed')], db_index=True, default='open', max_length=56, verbose_name='Remediation Status')),
                ('remediation_deadline_date', models.DateField(blank=True, null=True, verbose_name='Remediation Deadline')),
                ('actual_remediation_date', models.DateField(blank=True, null=True, verbose_name='Actual Remediation Date')),
                ('management_action_plan', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Management Action Plan')),
                ('working_papers', models.FileField(blank=True, null=True, upload_to='working_papers/', validators=[core.models.validators.validate_file_extension, core.models.validators.validate_file_size], verbose_name='Working Papers')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='audit.engagement', verbose_name='Engagement')),
                ('issue_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues_owned', to=settings.AUTH_USER_MODEL, verbose_name='Issue Owner')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Issue',
                'verbose_name_plural': 'Issues',
                'ordering': ['-date_identified', 'issue_title'],
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], db_index=True, default='pending', help_text='Current approval state for this object.', max_length=20, verbose_name='Approval State')),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals_to_review', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(limit_choices_to=models.Q(('app_label', 'audit'), ('model__in', ['issue', 'engagement', 'auditworkplan'])), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='organizations.organization')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_approvals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Approval',
                'verbose_name_plural': 'Approvals',
                'ordering': ['-created_at'],
                'indexes': [models.Index(condition=models.Q(('status', 'pending')), fields=['status'], name='pending_approvals_idx'), models.Index(fields=['content_type', 'object_id'], name='audit_appro_content_c6fa96_idx'), models.Index(fields=['organization', 'status'], name='audit_appro_organiz_80b30c_idx')],
                'unique_together': {('content_type', 'object_id', 'approver', 'status')},
            },
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['organization', 'code'], name='wp_org_code_idx'),
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['name'], name='wp_name_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='auditworkplan',
            unique_together={('organization', 'code')},
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['organization'], name='audit_engag_organiz_6687cf_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['audit_workplan'], name='audit_engag_audit_w_86765e_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['code'], name='audit_engag_code_f473c5_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['project_status'], name='audit_engag_project_ef030f_idx'),
        ),
        migrations.AddConstraint(
            model_name='engagement',
            constraint=models.UniqueConstraint(fields=('organization', 'audit_workplan', 'code'), name='unique_engagement_per_workplan'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['organization'], name='audit_issue_organiz_3fb973_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['code'], name='audit_issue_code_7b8e81_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['issue_title'], name='audit_issue_issue_t_f05e29_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['issue_status'], name='audit_issue_issue_s_f83e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['severity_status'], name='audit_issue_severit_0c825d_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['remediation_status'], name='audit_issue_remedia_1834b9_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['engagement'], name='audit_issue_engagem_81a932_idx'),
        ),
    ]
