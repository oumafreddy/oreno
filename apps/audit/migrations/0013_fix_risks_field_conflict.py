# Generated by Django 5.1.8 on 2025-10-02 06:09

from django.db import migrations, connection


def fix_risks_field_forward(apps, schema_editor):
    """
    Handle the risks field migration conflict by ensuring the field exists
    with the correct type (CKEditor5Field) in both issue and historicalissue tables.
    """
    with connection.cursor() as cursor:
        # Check if risks column exists in audit_issue table
        cursor.execute("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'audit_issue' AND column_name = 'risks'
        """)
        issue_risks = cursor.fetchone()
        
        # Check if risks column exists in audit_historicalissue table
        cursor.execute("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'audit_historicalissue' AND column_name = 'risks'
        """)
        historical_risks = cursor.fetchone()
        
        # If risks column doesn't exist in audit_issue, add it
        if not issue_risks:
            cursor.execute("""
                ALTER TABLE audit_issue 
                ADD COLUMN risks TEXT
            """)
            print("Added risks column to audit_issue table")
        
        # If risks column doesn't exist in audit_historicalissue, add it
        if not historical_risks:
            cursor.execute("""
                ALTER TABLE audit_historicalissue 
                ADD COLUMN risks TEXT
            """)
            print("Added risks column to audit_historicalissue table")
        
        # If the column exists but is not TEXT type, alter it
        if issue_risks and issue_risks[1] != 'text':
            cursor.execute("""
                ALTER TABLE audit_issue 
                ALTER COLUMN risks TYPE TEXT
            """)
            print("Altered risks column type in audit_issue table")
            
        if historical_risks and historical_risks[1] != 'text':
            cursor.execute("""
                ALTER TABLE audit_historicalissue 
                ALTER COLUMN risks TYPE TEXT
            """)
            print("Altered risks column type in audit_historicalissue table")


def fix_risks_field_reverse(apps, schema_editor):
    """
    Reverse migration - remove the risks column if it exists
    """
    with connection.cursor() as cursor:
        # Check if risks column exists and remove it
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'audit_issue' AND column_name = 'risks'
        """)
        if cursor.fetchone():
            cursor.execute("ALTER TABLE audit_issue DROP COLUMN risks")
            print("Removed risks column from audit_issue table")
            
        cursor.execute("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'audit_historicalissue' AND column_name = 'risks'
        """)
        if cursor.fetchone():
            cursor.execute("ALTER TABLE audit_historicalissue DROP COLUMN risks")
            print("Removed risks column from audit_historicalissue table")


class Migration(migrations.Migration):

    dependencies = [
        ('audit', '0012_change_risks_field_to_rich_text'),
    ]

    operations = [
        migrations.RunPython(fix_risks_field_forward, fix_risks_field_reverse),
    ]
