# Generated by Django 5.1.8 on 2025-06-10 16:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('audit', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('organizations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='approval',
            name='approver',
            field=models.ForeignKey(help_text='User who needs to approve or reject', on_delete=django.db.models.deletion.CASCADE, related_name='approvals_to_review', to=settings.AUTH_USER_MODEL, verbose_name='Approver'),
        ),
        migrations.AddField(
            model_name='approval',
            name='content_type',
            field=models.ForeignKey(help_text='The type of object requiring approval', limit_choices_to=models.Q(('app_label', 'audit'), ('model__in', ['issue', 'annualworkplan', 'engagement', 'objective', 'risk', 'procedure', 'recommendation', 'issueretest', 'followupaction'])), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type'),
        ),
        migrations.AddField(
            model_name='approval',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='approval',
            name='requester',
            field=models.ForeignKey(help_text='User who requested the approval', on_delete=django.db.models.deletion.CASCADE, related_name='requested_approvals', to=settings.AUTH_USER_MODEL, verbose_name='Requester'),
        ),
        migrations.AddField(
            model_name='auditworkplan',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_workplans', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='auditworkplan',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='auditworkplan',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='auditworkplan',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='annual_workplan',
            field=models.ForeignKey(help_text='The annual workplan this engagement belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='engagements', to='audit.auditworkplan', verbose_name='Annual Workplan'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_engagements', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='assigned_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagements_created', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='engagements_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Person responsible for completing this action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='followup_actions_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='completed_by',
            field=models.ForeignKey(blank=True, help_text='Person who completed this action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='followup_actions_completed', to=settings.AUTH_USER_MODEL, verbose_name='Completed By'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='Person who created this action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='followup_actions_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalapproval',
            name='approver',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who needs to approve or reject', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Approver'),
        ),
        migrations.AddField(
            model_name='historicalapproval',
            name='content_type',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The type of object requiring approval', limit_choices_to=models.Q(('app_label', 'audit'), ('model__in', ['issue', 'annualworkplan', 'engagement', 'objective', 'risk', 'procedure', 'recommendation', 'issueretest', 'followupaction'])), null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype', verbose_name='Content Type'),
        ),
        migrations.AddField(
            model_name='historicalapproval',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalapproval',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalapproval',
            name='requester',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who requested the approval', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Requester'),
        ),
        migrations.AddField(
            model_name='historicalauditworkplan',
            name='approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='historicalauditworkplan',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalauditworkplan',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalauditworkplan',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalauditworkplan',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='annual_workplan',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The annual workplan this engagement belongs to', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.auditworkplan', verbose_name='Annual Workplan'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Approved By'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='assigned_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned By'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalengagement',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person responsible for completing this action', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='completed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who completed this action', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Completed By'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who created this action', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='extension_approved_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Extension Approved By'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='issue_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person responsible for remediating this issue', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Issue Owner'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='secondary_owner',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Backup person responsible for this issue', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Secondary Owner'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='verified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who verified the remediation', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Verified By'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='retested_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who performed the retest', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Retested By'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='reviewer',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who reviewed the retest results', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalissueworkingpaper',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalissueworkingpaper',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalissueworkingpaper',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalissueworkingpaper',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='closed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Closed By'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='content_type',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalnote',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Auditor responsible for this objective', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='engagement',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.engagement', verbose_name='Engagement'),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalobjective',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Auditor who reviewed the test results', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='tested_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Auditor who performed the test', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Tested By'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalprocedureresult',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalprocedureresult',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalprocedureresult',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalprocedureresult',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person responsible for implementing this recommendation', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Organization that owns this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='verified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person who verified the implementation', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Verified By'),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Person responsible for managing this risk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Risk Owner'),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='organization',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='issue',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='issue',
            name='extension_approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_issue_extensions', to=settings.AUTH_USER_MODEL, verbose_name='Extension Approved By'),
        ),
        migrations.AddField(
            model_name='issue',
            name='issue_owner',
            field=models.ForeignKey(blank=True, help_text='Person responsible for remediating this issue', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues_owned', to=settings.AUTH_USER_MODEL, verbose_name='Issue Owner'),
        ),
        migrations.AddField(
            model_name='issue',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='issue',
            name='secondary_owner',
            field=models.ForeignKey(blank=True, help_text='Backup person responsible for this issue', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues_secondary_owned', to=settings.AUTH_USER_MODEL, verbose_name='Secondary Owner'),
        ),
        migrations.AddField(
            model_name='issue',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='issue',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='Person who verified the remediation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues_verified', to=settings.AUTH_USER_MODEL, verbose_name='Verified By'),
        ),
        migrations.AddField(
            model_name='historicalrecommendation',
            name='issue',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='historicalissueworkingpaper',
            name='issue',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='historicalissueretest',
            name='issue',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='issue',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Associated issue for this follow-up action', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='issue',
            field=models.ForeignKey(blank=True, help_text='Associated issue for this follow-up action', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followup_actions', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='issue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='retests', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='retested_by',
            field=models.ForeignKey(blank=True, help_text='Person who performed the retest', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issue_retests', to=settings.AUTH_USER_MODEL, verbose_name='Retested By'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='reviewer',
            field=models.ForeignKey(blank=True, help_text='Person who reviewed the retest results', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retest_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Reviewer'),
        ),
        migrations.AddField(
            model_name='issueretest',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='issueworkingpaper',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='issueworkingpaper',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='working_papers', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='issueworkingpaper',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='issueworkingpaper',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='note',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='note',
            name='closed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notes_closed', to=settings.AUTH_USER_MODEL, verbose_name='Closed By'),
        ),
        migrations.AddField(
            model_name='note',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='note',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='note',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='note',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='note',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='notification',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='notification',
            name='note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='audit.note'),
        ),
        migrations.AddField(
            model_name='notification',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_items', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='notification',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notification_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='objective',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Auditor responsible for this objective', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='objectives_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='objective',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='objective',
            name='engagement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objectives', to='audit.engagement', verbose_name='Engagement'),
        ),
        migrations.AddField(
            model_name='objective',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='objective',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='historicalrisk',
            name='objective',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The audit objective this risk is associated with', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.objective', verbose_name='Objective'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, help_text='Auditor who reviewed the test results', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedures_reviewed', to=settings.AUTH_USER_MODEL, verbose_name='Reviewed By'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='tested_by',
            field=models.ForeignKey(blank=True, help_text='Auditor who performed the test', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedures_tested', to=settings.AUTH_USER_MODEL, verbose_name='Tested By'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='issue',
            name='procedure',
            field=models.ForeignKey(blank=True, help_text='The audit procedure that identified this issue', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='audit.procedure', verbose_name='Procedure'),
        ),
        migrations.AddField(
            model_name='historicalprocedureresult',
            name='procedure',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.procedure', verbose_name='Procedure'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='procedure',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The audit procedure that identified this issue', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.procedure', verbose_name='Procedure'),
        ),
        migrations.AddField(
            model_name='procedureresult',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='procedureresult',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='procedureresult',
            name='procedure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='audit.procedure', verbose_name='Procedure'),
        ),
        migrations.AddField(
            model_name='procedureresult',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='issue',
            name='procedure_result',
            field=models.ForeignKey(blank=True, help_text='The procedure result that led to this issue (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issues', to='audit.procedureresult'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='procedure_result',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The procedure result that led to this issue (if applicable)', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.procedureresult'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Person responsible for implementing this recommendation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recommendations_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='audit.issue', verbose_name='Issue'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='recommendation',
            name='verified_by',
            field=models.ForeignKey(blank=True, help_text='Person who verified the implementation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recommendations_verified', to=settings.AUTH_USER_MODEL, verbose_name='Verified By'),
        ),
        migrations.AddField(
            model_name='historicalfollowupaction',
            name='recommendation',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Associated recommendation for this follow-up action', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.recommendation', verbose_name='Recommendation'),
        ),
        migrations.AddField(
            model_name='followupaction',
            name='recommendation',
            field=models.ForeignKey(blank=True, help_text='Associated recommendation for this follow-up action', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followup_actions', to='audit.recommendation', verbose_name='Recommendation'),
        ),
        migrations.AddField(
            model_name='risk',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='Person responsible for managing this risk', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_risk_assigned', to=settings.AUTH_USER_MODEL, verbose_name='Risk Owner'),
        ),
        migrations.AddField(
            model_name='risk',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_risk_created', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AddField(
            model_name='risk',
            name='objective',
            field=models.ForeignKey(help_text='The audit objective this risk is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='audit_risks', to='audit.objective', verbose_name='Objective'),
        ),
        migrations.AddField(
            model_name='risk',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_risk_set', to='organizations.organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='risk',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_risk_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated By'),
        ),
        migrations.AddField(
            model_name='procedure',
            name='risk',
            field=models.ForeignKey(help_text='The risk this procedure is designed to test', on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='audit.risk', verbose_name='Risk'),
        ),
        migrations.AddField(
            model_name='historicalprocedure',
            name='risk',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The risk this procedure is designed to test', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='audit.risk', verbose_name='Risk'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(condition=models.Q(('status', 'pending')), fields=['status'], name='pending_approvals_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['content_type', 'object_id'], name='audit_appro_content_c6fa96_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['organization', 'status'], name='audit_appro_organiz_80b30c_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['approver', 'status'], name='audit_appro_approve_130243_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['due_date'], name='audit_appro_due_dat_66c689_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['approval_type'], name='audit_appro_approva_5c4163_idx'),
        ),
        migrations.AddConstraint(
            model_name='approval',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_approval'),
        ),
        migrations.AlterUniqueTogether(
            name='approval',
            unique_together={('content_type', 'object_id', 'approver', 'approval_type')},
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['organization', 'code'], name='wp_org_code_idx'),
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['name'], name='wp_name_idx'),
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['fiscal_year'], name='wp_fiscal_year_idx'),
        ),
        migrations.AddIndex(
            model_name='auditworkplan',
            index=models.Index(fields=['approval_status'], name='wp_approval_status_idx'),
        ),
        migrations.AddConstraint(
            model_name='auditworkplan',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_auditworkplan'),
        ),
        migrations.AlterUniqueTogether(
            name='auditworkplan',
            unique_together={('organization', 'code')},
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['organization'], name='audit_engag_organiz_6687cf_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['annual_workplan'], name='audit_engag_annual__2b12f9_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['code'], name='audit_engag_code_f473c5_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['project_status'], name='audit_engag_project_ef030f_idx'),
        ),
        migrations.AddIndex(
            model_name='engagement',
            index=models.Index(fields=['approval_status'], name='audit_engag_approva_057c72_idx'),
        ),
        migrations.AddConstraint(
            model_name='engagement',
            constraint=models.UniqueConstraint(fields=('organization', 'annual_workplan', 'code'), name='unique_engagement_per_workplan'),
        ),
        migrations.AddConstraint(
            model_name='engagement',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_engagement'),
        ),
        migrations.AddIndex(
            model_name='issueretest',
            index=models.Index(fields=['organization'], name='audit_issue_organiz_855a6e_idx'),
        ),
        migrations.AddIndex(
            model_name='issueretest',
            index=models.Index(fields=['issue'], name='audit_issue_issue_i_7a2054_idx'),
        ),
        migrations.AddIndex(
            model_name='issueretest',
            index=models.Index(fields=['result'], name='audit_issue_result_ad12c4_idx'),
        ),
        migrations.AddIndex(
            model_name='issueretest',
            index=models.Index(fields=['verification_status'], name='audit_issue_verific_32ed55_idx'),
        ),
        migrations.AddConstraint(
            model_name='issueretest',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_issueretest'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['organization'], name='audit_issue_organiz_3fb973_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['code'], name='audit_issue_code_7b8e81_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['issue_title'], name='audit_issue_issue_t_f05e29_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['issue_status'], name='audit_issue_issue_s_f83e2a_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['risk_level'], name='audit_issue_risk_le_b0e00d_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['remediation_status'], name='audit_issue_remedia_1834b9_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['procedure'], name='audit_issue_procedu_05880b_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['issue_type'], name='audit_issue_issue_t_f2862d_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['is_repeat_issue'], name='audit_issue_is_repe_b7b40b_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['remediation_priority'], name='audit_issue_remedia_fd7422_idx'),
        ),
        migrations.AddIndex(
            model_name='issue',
            index=models.Index(fields=['regulatory_impact'], name='audit_issue_regulat_fafcc9_idx'),
        ),
        migrations.AddConstraint(
            model_name='issue',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_issue'),
        ),
        migrations.AddConstraint(
            model_name='issue',
            constraint=models.CheckConstraint(condition=models.Q(('risk_score__gte', 1), ('risk_score__lte', 9)), name='risk_score_range_issue'),
        ),
        migrations.AddConstraint(
            model_name='issue',
            constraint=models.CheckConstraint(condition=models.Q(('impact__gte', 1), ('impact__lte', 3)), name='impact_range_issue'),
        ),
        migrations.AddConstraint(
            model_name='issue',
            constraint=models.CheckConstraint(condition=models.Q(('likelihood__gte', 1), ('likelihood__lte', 3)), name='likelihood_range_issue'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['organization'], name='audit_recom_organiz_9c9e86_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['issue'], name='audit_recom_issue_i_84d5b3_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['implementation_status'], name='audit_recom_impleme_6d6f7b_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendation',
            index=models.Index(fields=['priority'], name='audit_recom_priorit_ea1ad7_idx'),
        ),
        migrations.AddConstraint(
            model_name='recommendation',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_recommendation'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['organization'], name='audit_follo_organiz_27ef96_idx'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['issue'], name='audit_follo_issue_i_87eb93_idx'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['recommendation'], name='audit_follo_recomme_52659c_idx'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['status'], name='audit_follo_status_5389de_idx'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['priority'], name='audit_follo_priorit_76fafb_idx'),
        ),
        migrations.AddIndex(
            model_name='followupaction',
            index=models.Index(fields=['due_date'], name='audit_follo_due_dat_01815b_idx'),
        ),
        migrations.AddConstraint(
            model_name='followupaction',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_followupaction'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['organization'], name='audit_risk_organiz_42a14f_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['objective'], name='audit_risk_objecti_d8241f_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['category'], name='audit_risk_categor_e46858_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['status'], name='audit_risk_status_734f9f_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['inherent_risk_score'], name='audit_risk_inheren_96fb62_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['residual_risk_score'], name='audit_risk_residua_ed40dc_idx'),
        ),
        migrations.AddConstraint(
            model_name='risk',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_risk'),
        ),
        migrations.AddConstraint(
            model_name='risk',
            constraint=models.CheckConstraint(condition=models.Q(('inherent_risk_score__gte', 1), ('inherent_risk_score__lte', 9)), name='risk_score_range_risk'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['organization'], name='audit_proce_organiz_e6c268_idx'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['risk'], name='audit_proce_risk_id_1da70f_idx'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['test_status'], name='audit_proce_test_st_5643bd_idx'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['result'], name='audit_proce_result_32e17d_idx'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['procedure_type'], name='audit_proce_procedu_c9da93_idx'),
        ),
        migrations.AddIndex(
            model_name='procedure',
            index=models.Index(fields=['tested_by'], name='audit_proce_tested__ea0586_idx'),
        ),
        migrations.AddConstraint(
            model_name='procedure',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_procedure'),
        ),
        migrations.AddConstraint(
            model_name='procedure',
            constraint=models.CheckConstraint(condition=models.Q(('exceptions_noted__gte', 0)), name='exceptions_noted_positive_procedure'),
        ),
    ]
