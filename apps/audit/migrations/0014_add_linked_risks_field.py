# Generated by Django 5.1.8 on 2025-10-02 06:11

from django.db import migrations, models, connection


def add_linked_risks_field_if_not_exists(apps, schema_editor):
    """
    Add the linked_risks ManyToManyField only if the table doesn't already exist.
    This prevents the migration from failing if the table already exists.
    """
    with connection.cursor() as cursor:
        # Check if the table already exists
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_name = 'audit_issue_linked_risks'
        """)
        
        if not cursor.fetchone():
            # Table doesn't exist, create it
            cursor.execute("""
                CREATE TABLE audit_issue_linked_risks (
                    id SERIAL PRIMARY KEY,
                    issue_id INTEGER NOT NULL,
                    risk_id INTEGER NOT NULL,
                    FOREIGN KEY (issue_id) REFERENCES audit_issue (id) ON DELETE CASCADE,
                    FOREIGN KEY (risk_id) REFERENCES risk_risk (id) ON DELETE CASCADE,
                    UNIQUE (issue_id, risk_id)
                )
            """)
            print("Created 'audit_issue_linked_risks' table")
        else:
            print("'audit_issue_linked_risks' table already exists")


def remove_linked_risks_field_if_exists(apps, schema_editor):
    """
    Remove the linked_risks table if it exists.
    """
    with connection.cursor() as cursor:
        # Check if the table exists
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_name = 'audit_issue_linked_risks'
        """)
        
        if cursor.fetchone():
            # Table exists, remove it
            cursor.execute("DROP TABLE audit_issue_linked_risks")
            print("Removed 'audit_issue_linked_risks' table")
        else:
            print("'audit_issue_linked_risks' table does not exist")


class Migration(migrations.Migration):

    dependencies = [
        ('audit', '0013_fix_risks_field_conflict'),
        ('risk', '0004_objective_risk_objectives_and_more'),
    ]

    operations = [
        migrations.RunPython(
            add_linked_risks_field_if_not_exists,
            remove_linked_risks_field_if_exists,
        ),
        # Skip the AddField operation since we're handling it manually above
        # The field is already in the model, we just need to ensure the table exists
    ]
