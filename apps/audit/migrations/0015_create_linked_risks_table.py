# Generated by Django 5.1.8 on 2025-10-02 06:16

from django.db import migrations, connection


def create_linked_risks_table_forward(apps, schema_editor):
    """
    Manually create the audit_issue_linked_risks table for the ManyToManyField
    """
    with connection.cursor() as cursor:
        # Check if the table already exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'audit_issue_linked_risks'
            );
        """)
        table_exists = cursor.fetchone()[0]
        
        if not table_exists:
            # Create the ManyToMany intermediate table
            cursor.execute("""
                CREATE TABLE audit_issue_linked_risks (
                    id SERIAL PRIMARY KEY,
                    issue_id INTEGER NOT NULL REFERENCES audit_issue(id) ON DELETE CASCADE,
                    risk_id INTEGER NOT NULL REFERENCES risk_risk(id) ON DELETE CASCADE,
                    UNIQUE(issue_id, risk_id)
                );
            """)
            print("Created audit_issue_linked_risks table")
        else:
            print("audit_issue_linked_risks table already exists")


def create_linked_risks_table_reverse(apps, schema_editor):
    """
    Drop the audit_issue_linked_risks table
    """
    with connection.cursor() as cursor:
        cursor.execute("DROP TABLE IF EXISTS audit_issue_linked_risks;")
        print("Dropped audit_issue_linked_risks table")


class Migration(migrations.Migration):

    dependencies = [
        ('audit', '0014_add_linked_risks_field'),
    ]

    operations = [
        migrations.RunPython(create_linked_risks_table_forward, create_linked_risks_table_reverse),
    ]
