# Generated by Django 5.1.8 on 2025-09-05 17:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('role', models.CharField(choices=[('train', 'Train'), ('validation', 'Validation'), ('test', 'Test'), ('other', 'Other')], default='test', max_length=20)),
                ('path', models.CharField(help_text='Storage path/URI to the dataset', max_length=1024)),
                ('format', models.CharField(default='parquet', help_text='csv or parquet', max_length=50)),
                ('schema', models.JSONField(blank=True, default=dict)),
                ('sensitive_attributes', models.JSONField(blank=True, default=list)),
                ('label', models.CharField(blank=True, max_length=128, null=True)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Dataset Asset',
                'verbose_name_plural': 'Dataset Assets',
            },
        ),
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('code', models.CharField(db_index=True, max_length=64)),
                ('title', models.CharField(max_length=255)),
                ('version', models.CharField(blank=True, max_length=64, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Framework',
                'verbose_name_plural': 'Frameworks',
            },
        ),
        migrations.CreateModel(
            name='Clause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('clause_code', models.CharField(db_index=True, max_length=128)),
                ('text', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('framework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clauses', to='ai_governance.framework')),
            ],
            options={
                'verbose_name': 'Clause',
                'verbose_name_plural': 'Clauses',
            },
        ),
        migrations.CreateModel(
            name='ModelAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('model_type', models.CharField(choices=[('tabular', 'Tabular'), ('image', 'Image'), ('generative', 'Generative')], max_length=20)),
                ('uri', models.CharField(help_text='Registry or storage URI for the model', max_length=1024)),
                ('version', models.CharField(blank=True, max_length=128, null=True)),
                ('signature', models.JSONField(blank=True, default=dict)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Model Asset',
                'verbose_name_plural': 'Model Assets',
            },
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('model_type', models.CharField(choices=[('tabular', 'Tabular'), ('image', 'Image'), ('generative', 'Generative')], max_length=20)),
                ('config', models.JSONField(blank=True, default=dict, help_text='Tests, thresholds, slices')),
                ('alert_rules', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Test Plan',
                'verbose_name_plural': 'Test Plans',
            },
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('test_name', models.CharField(db_index=True, max_length=255)),
                ('summary', models.JSONField(blank=True, default=dict)),
                ('passed', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Test Result',
                'verbose_name_plural': 'Test Results',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('value', models.FloatField()),
                ('threshold', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('slice_key', models.CharField(blank=True, max_length=255, null=True)),
                ('slice_value', models.CharField(blank=True, max_length=255, null=True)),
                ('extra', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('test_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='ai_governance.testresult')),
            ],
            options={
                'verbose_name': 'Metric',
                'verbose_name_plural': 'Metrics',
            },
        ),
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('worker_info', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('dataset_asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test_runs', to='ai_governance.datasetasset')),
                ('model_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_runs', to='ai_governance.modelasset')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('test_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test_runs', to='ai_governance.testplan')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Test Run',
                'verbose_name_plural': 'Test Runs',
            },
        ),
        migrations.AddField(
            model_name='testresult',
            name='test_run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='ai_governance.testrun'),
        ),
        migrations.CreateModel(
            name='EvidenceArtifact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('artifact_type', models.CharField(choices=[('pdf', 'PDF'), ('image', 'Image'), ('json', 'JSON'), ('csv', 'CSV'), ('log', 'Log'), ('other', 'Other')], default='other', max_length=20)),
                ('file_path', models.CharField(max_length=1024)),
                ('file_info', models.JSONField(blank=True, default=dict)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('test_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='ai_governance.testrun')),
            ],
            options={
                'verbose_name': 'Evidence Artifact',
                'verbose_name_plural': 'Evidence Artifacts',
            },
        ),
        migrations.CreateModel(
            name='WebhookSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('url', models.URLField()),
                ('events', models.JSONField(blank=True, default=list, help_text='List of event names')),
                ('secret', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Webhook Subscription',
                'verbose_name_plural': 'Webhook Subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ComplianceMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('test_name', models.CharField(db_index=True, max_length=255)),
                ('metric_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rationale', models.TextField(blank=True)),
                ('evidence_rule', models.JSONField(blank=True, default=dict)),
                ('clause', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mappings', to='ai_governance.clause')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Compliance Mapping',
                'verbose_name_plural': 'Compliance Mappings',
                'indexes': [models.Index(fields=['organization'], name='ai_governan_organiz_ce88e6_idx'), models.Index(fields=['test_name'], name='ai_governan_test_na_2b6e18_idx'), models.Index(fields=['metric_name'], name='ai_governan_metric__b574c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConnectorConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('connector_type', models.CharField(choices=[('mlflow', 'MLflow'), ('s3', 'S3'), ('azure_blob', 'Azure Blob'), ('other', 'Other')], max_length=32)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('config', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Connector Config',
                'verbose_name_plural': 'Connector Configs',
                'indexes': [models.Index(fields=['organization'], name='ai_governan_organiz_5793a6_idx'), models.Index(fields=['connector_type'], name='ai_governan_connect_1054c4_idx')],
                'unique_together': {('organization', 'name', 'connector_type')},
            },
        ),
        migrations.AddIndex(
            model_name='datasetasset',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_fc8395_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetasset',
            index=models.Index(fields=['name'], name='ai_governan_name_937a30_idx'),
        ),
        migrations.AddIndex(
            model_name='datasetasset',
            index=models.Index(fields=['role'], name='ai_governan_role_ef0089_idx'),
        ),
        migrations.AddIndex(
            model_name='framework',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_c16777_idx'),
        ),
        migrations.AddIndex(
            model_name='framework',
            index=models.Index(fields=['code'], name='ai_governan_code_065673_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='framework',
            unique_together={('organization', 'code', 'version')},
        ),
        migrations.AddIndex(
            model_name='clause',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_420dea_idx'),
        ),
        migrations.AddIndex(
            model_name='clause',
            index=models.Index(fields=['clause_code'], name='ai_governan_clause__156403_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clause',
            unique_together={('framework', 'clause_code')},
        ),
        migrations.AddIndex(
            model_name='modelasset',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_0587c3_idx'),
        ),
        migrations.AddIndex(
            model_name='modelasset',
            index=models.Index(fields=['name'], name='ai_governan_name_91fe0b_idx'),
        ),
        migrations.AddIndex(
            model_name='modelasset',
            index=models.Index(fields=['model_type'], name='ai_governan_model_t_e31c14_idx'),
        ),
        migrations.AddIndex(
            model_name='testplan',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_6f366c_idx'),
        ),
        migrations.AddIndex(
            model_name='testplan',
            index=models.Index(fields=['model_type'], name='ai_governan_model_t_344585_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='testplan',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='metric',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_9377eb_idx'),
        ),
        migrations.AddIndex(
            model_name='metric',
            index=models.Index(fields=['name'], name='ai_governan_name_7a80db_idx'),
        ),
        migrations.AddIndex(
            model_name='testrun',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_a7598a_idx'),
        ),
        migrations.AddIndex(
            model_name='testrun',
            index=models.Index(fields=['status'], name='ai_governan_status_a03d44_idx'),
        ),
        migrations.AddIndex(
            model_name='testrun',
            index=models.Index(fields=['created_at'], name='ai_governan_created_d62d94_idx'),
        ),
        migrations.AddIndex(
            model_name='testresult',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_3d8856_idx'),
        ),
        migrations.AddIndex(
            model_name='testresult',
            index=models.Index(fields=['test_name'], name='ai_governan_test_na_f5c4f7_idx'),
        ),
        migrations.AddIndex(
            model_name='evidenceartifact',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_c5962f_idx'),
        ),
        migrations.AddIndex(
            model_name='evidenceartifact',
            index=models.Index(fields=['artifact_type'], name='ai_governan_artifac_b4524e_idx'),
        ),
        migrations.AddIndex(
            model_name='webhooksubscription',
            index=models.Index(fields=['organization'], name='ai_governan_organiz_4fd785_idx'),
        ),
        migrations.AddIndex(
            model_name='webhooksubscription',
            index=models.Index(fields=['is_active'], name='ai_governan_is_acti_6c66e8_idx'),
        ),
    ]
