# Generated by Django 5.1.8 on 2025-10-18 10:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_governance', '0002_datasetasset_contains_pii_and_more'),
        ('organizations', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelRiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when the record was soft-deleted', null=True, verbose_name='deleted at')),
                ('risk_level', models.CharField(choices=[('minimal', 'Minimal Risk'), ('limited', 'Limited Risk'), ('high', 'High Risk'), ('unacceptable', 'Unacceptable Risk')], help_text='Assessed risk level based on model characteristics', max_length=20)),
                ('assessment_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Date when risk assessment was conducted')),
                ('approval_status', models.CharField(choices=[('draft', 'Draft'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('requires_changes', 'Requires Changes')], default='draft', help_text='Current approval status in the workflow', max_length=20)),
                ('approval_date', models.DateTimeField(blank=True, help_text='Date when approval/rejection was given', null=True)),
                ('approval_notes', models.TextField(blank=True, help_text='Notes from the approver')),
                ('risk_factors', models.JSONField(default=dict, help_text='Detailed risk factors and their scores')),
                ('mitigation_measures', models.JSONField(default=dict, help_text='Risk mitigation measures and controls')),
                ('compliance_requirements', models.JSONField(default=dict, help_text='Applicable compliance requirements')),
                ('evidence_documents', models.JSONField(default=list, help_text='References to evidence documents and artifacts')),
                ('production_approved', models.BooleanField(default=False, help_text='Whether model is approved for production deployment')),
                ('production_deployment_date', models.DateTimeField(blank=True, help_text='Date when model was deployed to production', null=True)),
                ('deployment_conditions', models.JSONField(default=dict, help_text='Conditions and restrictions for production deployment')),
                ('next_review_date', models.DateTimeField(blank=True, help_text='Date for next risk assessment review', null=True)),
                ('review_frequency_months', models.IntegerField(default=12, help_text='Frequency of risk assessment reviews in months')),
                ('approver', models.ForeignKey(blank=True, help_text='User who approved/rejected the assessment', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_assessments', to=settings.AUTH_USER_MODEL)),
                ('assessor', models.ForeignKey(help_text='User who conducted the risk assessment', on_delete=django.db.models.deletion.PROTECT, related_name='conducted_assessments', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('model_asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_assessments', to='ai_governance.modelasset')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'Model Risk Assessment',
                'verbose_name_plural': 'Model Risk Assessments',
                'indexes': [models.Index(fields=['organization'], name='ai_governan_organiz_3c5f81_idx'), models.Index(fields=['model_asset'], name='ai_governan_model_a_80c6f8_idx'), models.Index(fields=['risk_level'], name='ai_governan_risk_le_e57d63_idx'), models.Index(fields=['approval_status'], name='ai_governan_approva_b97929_idx'), models.Index(fields=['production_approved'], name='ai_governan_product_dc0577_idx')],
                'unique_together': {('organization', 'model_asset', 'assessment_date')},
            },
        ),
    ]
