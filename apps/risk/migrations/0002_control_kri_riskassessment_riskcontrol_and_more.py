# Generated by Django 5.1.8 on 2025-05-02 17:36

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0005_archivedorganization_organization_required_archivedorganization_and_more'),
        ('risk', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(blank=True, db_index=True, max_length=16, null=True, verbose_name='Control Code')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Control Name')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('control_type', models.CharField(choices=[('preventive', 'Preventive'), ('detective', 'Detective'), ('corrective', 'Corrective'), ('directive', 'Directive')], max_length=20, verbose_name='Control Type')),
                ('control_nature', models.CharField(choices=[('manual', 'Manual'), ('automated', 'Automated'), ('semi-automated', 'Semi-Automated')], max_length=20, verbose_name='Control Nature')),
                ('control_frequency', models.CharField(choices=[('continuous', 'Continuous'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually'), ('ad-hoc', 'Ad-hoc')], max_length=20, verbose_name='Control Frequency')),
                ('status', models.CharField(choices=[('implemented', 'Implemented'), ('in-progress', 'In Progress'), ('not-implemented', 'Not Implemented'), ('planned', 'Planned')], db_index=True, default='not-implemented', max_length=20, verbose_name='Control Status')),
                ('effectiveness_rating', models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Effectiveness Rating')),
                ('control_owner', models.CharField(db_index=True, max_length=100, verbose_name='Control Owner')),
                ('owner_department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Owner Department')),
                ('last_review_date', models.DateField(blank=True, null=True, verbose_name='Last Review Date')),
                ('next_review_date', models.DateField(blank=True, null=True, verbose_name='Next Review Date')),
                ('documentation', models.FileField(blank=True, null=True, upload_to='control_docs/', verbose_name='Documentation')),
            ],
            options={
                'verbose_name': 'Control',
                'verbose_name_plural': 'Controls',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='KRI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('name', models.CharField(max_length=255, verbose_name='KRI Name')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('value', models.FloatField(verbose_name='Value')),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement (%, $, count, etc.)', max_length=50, null=True, verbose_name='Unit')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('threshold_warning', models.FloatField(help_text='Warning level threshold', verbose_name='Warning Threshold')),
                ('threshold_critical', models.FloatField(help_text='Critical level threshold', verbose_name='Critical Threshold')),
                ('direction', models.CharField(choices=[('increasing', 'Increasing values indicate higher risk'), ('decreasing', 'Decreasing values indicate higher risk')], default='increasing', max_length=20, verbose_name='Direction')),
                ('data_source', models.CharField(blank=True, help_text='Source of the KRI data', max_length=255, null=True, verbose_name='Data Source')),
                ('collection_frequency', models.CharField(blank=True, help_text='How often this KRI is collected', max_length=50, null=True, verbose_name='Collection Frequency')),
            ],
            options={
                'verbose_name': 'Key Risk Indicator',
                'verbose_name_plural': 'Key Risk Indicators',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('assessment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Assessment Date')),
                ('assessor', models.CharField(max_length=100, verbose_name='Assessor')),
                ('impact_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Impact Score')),
                ('likelihood_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Likelihood Score')),
                ('risk_score', models.IntegerField(editable=False, verbose_name='Risk Score')),
                ('assessment_type', models.CharField(choices=[('inherent', 'Inherent Risk (before controls)'), ('residual', 'Residual Risk (after controls)'), ('target', 'Target Risk (desired state)')], max_length=20, verbose_name='Assessment Type')),
                ('notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Assessment Notes')),
            ],
            options={
                'verbose_name': 'Risk Assessment',
                'verbose_name_plural': 'Risk Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('effectiveness_rating', models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Effectiveness Rating')),
            ],
            options={
                'verbose_name': 'Risk Control',
                'verbose_name_plural': 'Risk Controls',
            },
        ),
        migrations.CreateModel(
            name='RiskMatrixConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('name', models.CharField(default='Default Risk Matrix', max_length=100, verbose_name='Matrix Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('impact_levels', models.IntegerField(default=5, help_text='Number of impact levels (e.g., 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Impact Levels')),
                ('likelihood_levels', models.IntegerField(default=5, help_text='Number of likelihood levels (e.g., 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Likelihood Levels')),
                ('low_threshold', models.IntegerField(default=5, help_text='Maximum score for low risk', verbose_name='Low Risk Threshold')),
                ('medium_threshold', models.IntegerField(default=10, help_text='Maximum score for medium risk', verbose_name='Medium Risk Threshold')),
                ('high_threshold', models.IntegerField(default=15, help_text='Maximum score for high risk', verbose_name='High Risk Threshold')),
                ('very_high_threshold', models.IntegerField(default=20, help_text='Maximum score for very high risk', verbose_name='Very High Risk Threshold')),
                ('low_color', models.CharField(default='#00FF00', help_text='Color code for low risk (e.g., #00FF00)', max_length=7, verbose_name='Low Risk Color')),
                ('medium_color', models.CharField(default='#FFFF00', help_text='Color code for medium risk (e.g., #FFFF00)', max_length=7, verbose_name='Medium Risk Color')),
                ('high_color', models.CharField(default='#FFA500', help_text='Color code for high risk (e.g., #FFA500)', max_length=7, verbose_name='High Risk Color')),
                ('very_high_color', models.CharField(default='#FF0000', help_text='Color code for very high risk (e.g., #FF0000)', max_length=7, verbose_name='Very High Risk Color')),
                ('critical_color', models.CharField(default='#800000', help_text='Color code for critical risk (e.g., #800000)', max_length=7, verbose_name='Critical Risk Color')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Matrix')),
            ],
            options={
                'verbose_name': 'Risk Matrix Configuration',
                'verbose_name_plural': 'Risk Matrix Configurations',
            },
        ),
        migrations.CreateModel(
            name='RiskRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(blank=True, db_index=True, max_length=16, null=True, verbose_name='Register Code')),
                ('register_name', models.CharField(db_index=True, max_length=255, verbose_name='Register Name')),
                ('register_creation_date', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('register_period', models.CharField(max_length=4, verbose_name='Period')),
                ('register_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Risk Register',
                'verbose_name_plural': 'Risk Registers',
                'ordering': ['-register_creation_date', 'register_name'],
            },
        ),
        migrations.AlterModelOptions(
            name='risk',
            options={'ordering': ['-updated_at', 'risk_name'], 'verbose_name': 'Risk', 'verbose_name_plural': 'Risks'},
        ),
        migrations.RemoveConstraint(
            model_name='risk',
            name='organization_required_risk',
        ),
        migrations.RemoveField(
            model_name='risk',
            name='name',
        ),
        migrations.AddField(
            model_name='risk',
            name='action_due_date',
            field=models.DateField(blank=True, null=True, verbose_name='Action Due Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='action_owner',
            field=models.CharField(blank=True, max_length=70, null=True, verbose_name='Action Owner'),
        ),
        migrations.AddField(
            model_name='risk',
            name='action_plan',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Action Plan'),
        ),
        migrations.AddField(
            model_name='risk',
            name='action_plan_status',
            field=models.CharField(choices=[('not-started', 'Not Started'), ('in-progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='not-started', max_length=20, verbose_name='Action Plan Status'),
        ),
        migrations.AddField(
            model_name='risk',
            name='additional_notes',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Additional Notes'),
        ),
        migrations.AddField(
            model_name='risk',
            name='category',
            field=models.CharField(choices=[('strategic', 'Strategic'), ('operational', 'Operational'), ('financial', 'Financial'), ('compliance', 'Compliance'), ('reputational', 'Reputational'), ('technological', 'Technological'), ('other', 'Other')], db_index=True, default='other', max_length=20, verbose_name='Risk Category'),
        ),
        migrations.AddField(
            model_name='risk',
            name='closure_date',
            field=models.DateField(blank=True, null=True, verbose_name='Closure Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='closure_justification',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Closure Justification'),
        ),
        migrations.AddField(
            model_name='risk',
            name='code',
            field=models.CharField(blank=True, db_index=True, max_length=16, null=True, verbose_name='Risk Code'),
        ),
        migrations.AddField(
            model_name='risk',
            name='control_last_review_date',
            field=models.DateField(blank=True, null=True, verbose_name='Last Control Review Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='control_next_review_date',
            field=models.DateField(blank=True, null=True, verbose_name='Next Control Review Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='control_owner',
            field=models.CharField(blank=True, max_length=70, null=True, verbose_name='Control Owner'),
        ),
        migrations.AddField(
            model_name='risk',
            name='control_rating',
            field=models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Control Rating'),
        ),
        migrations.AddField(
            model_name='risk',
            name='control_status',
            field=models.CharField(choices=[('implemented', 'Implemented'), ('in-progress', 'In Progress'), ('not-implemented', 'Not Implemented'), ('planned', 'Planned')], default='not-implemented', max_length=20, verbose_name='Control Status'),
        ),
        migrations.AddField(
            model_name='risk',
            name='controls_description',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Controls'),
        ),
        migrations.AddField(
            model_name='risk',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='risk',
            name='date_identified',
            field=models.DateField(default=django.utils.timezone.now, verbose_name='Date Identified'),
        ),
        migrations.AddField(
            model_name='risk',
            name='department',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='risk',
            name='external_context',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='External Context'),
        ),
        migrations.AddField(
            model_name='risk',
            name='identified_by',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Identified By'),
        ),
        migrations.AddField(
            model_name='risk',
            name='inherent_impact_score',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Inherent Impact Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='inherent_likelihood_score',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Inherent Likelihood Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='inherent_risk_score',
            field=models.IntegerField(blank=True, editable=False, null=True, verbose_name='Inherent Risk Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='internal_context',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Internal Context'),
        ),
        migrations.AddField(
            model_name='risk',
            name='kri_description',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='KRI Description'),
        ),
        migrations.AddField(
            model_name='risk',
            name='kri_threshold',
            field=models.IntegerField(default=70, verbose_name='KRI Threshold'),
        ),
        migrations.AddField(
            model_name='risk',
            name='last_reviewed_by',
            field=models.CharField(blank=True, max_length=70, null=True, verbose_name='Last Reviewed By'),
        ),
        migrations.AddField(
            model_name='risk',
            name='last_reviewed_date',
            field=models.DateField(blank=True, null=True, verbose_name='Last Reviewed Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='next_review_date',
            field=models.DateField(blank=True, null=True, verbose_name='Next Review Date'),
        ),
        migrations.AddField(
            model_name='risk',
            name='residual_impact_score',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Residual Impact Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='residual_likelihood_score',
            field=models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Residual Likelihood Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='residual_risk_score',
            field=models.IntegerField(blank=True, editable=False, null=True, verbose_name='Residual Risk Score'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_appetite',
            field=models.IntegerField(default=15, verbose_name='Risk Appetite'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_description',
            field=django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_name',
            field=models.CharField(blank=True, db_index=True, max_length=512, null=True, verbose_name='Risk Name'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_owner',
            field=models.CharField(blank=True, db_index=True, max_length=70, null=True, verbose_name='Risk Owner'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_response_strategy',
            field=models.CharField(choices=[('mitigate', 'Mitigate/Reduce'), ('accept', 'Accept'), ('transfer', 'Transfer/Share'), ('avoid', 'Avoid/Terminate'), ('exploit', 'Exploit/Enhance')], default='mitigate', max_length=20, verbose_name='Risk Response Strategy'),
        ),
        migrations.AddField(
            model_name='risk',
            name='status',
            field=models.CharField(choices=[('open', 'Open'), ('in-progress', 'In Progress'), ('closed', 'Closed'), ('archived', 'Archived')], db_index=True, default='open', max_length=20, verbose_name='Risk Status'),
        ),
        migrations.AddField(
            model_name='risk',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='control',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='control',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='control',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='kri',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kris', to='risk.risk', verbose_name='Risk'),
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='risk.risk', verbose_name='Risk'),
        ),
        migrations.AddField(
            model_name='riskassessment',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='riskcontrol',
            name='control',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.control', verbose_name='Control'),
        ),
        migrations.AddField(
            model_name='riskcontrol',
            name='risk',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.risk', verbose_name='Risk'),
        ),
        migrations.AddField(
            model_name='control',
            name='risks',
            field=models.ManyToManyField(related_name='controls', through='risk.RiskControl', to='risk.risk'),
        ),
        migrations.AddField(
            model_name='riskmatrixconfig',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='riskmatrixconfig',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='riskmatrixconfig',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='riskregister',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by'),
        ),
        migrations.AddField(
            model_name='riskregister',
            name='organization',
            field=models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization'),
        ),
        migrations.AddField(
            model_name='riskregister',
            name='updated_by',
            field=models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by'),
        ),
        migrations.AddField(
            model_name='risk',
            name='risk_register',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='risks', to='risk.riskregister', verbose_name='Risk Register'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['organization'], name='risk_risk_organiz_7f8d2e_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['risk_register'], name='risk_risk_risk_re_357491_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['code'], name='risk_risk_code_eb37c3_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['risk_name'], name='risk_risk_risk_na_f38719_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['category'], name='risk_risk_categor_3dadff_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['status'], name='risk_risk_status_10b721_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['risk_owner'], name='risk_risk_risk_ow_f81fb8_idx'),
        ),
        migrations.AddIndex(
            model_name='risk',
            index=models.Index(fields=['date_identified'], name='risk_risk_date_id_4387b9_idx'),
        ),
        migrations.AddIndex(
            model_name='kri',
            index=models.Index(fields=['risk'], name='risk_kri_risk_id_02a25d_idx'),
        ),
        migrations.AddIndex(
            model_name='kri',
            index=models.Index(fields=['timestamp'], name='risk_kri_timesta_16fb15_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['risk'], name='risk_riskas_risk_id_e2be7d_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['assessment_date'], name='risk_riskas_assessm_58c18e_idx'),
        ),
        migrations.AddIndex(
            model_name='riskassessment',
            index=models.Index(fields=['assessment_type'], name='risk_riskas_assessm_33bcd7_idx'),
        ),
        migrations.AddIndex(
            model_name='riskcontrol',
            index=models.Index(fields=['risk'], name='risk_riskco_risk_id_944c1d_idx'),
        ),
        migrations.AddIndex(
            model_name='riskcontrol',
            index=models.Index(fields=['control'], name='risk_riskco_control_85ba1c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='riskcontrol',
            unique_together={('risk', 'control')},
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['organization'], name='risk_contro_organiz_710ef9_idx'),
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['code'], name='risk_contro_code_492369_idx'),
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['control_owner'], name='risk_contro_control_fb78e4_idx'),
        ),
        migrations.AddIndex(
            model_name='control',
            index=models.Index(fields=['status'], name='risk_contro_status_c5522e_idx'),
        ),
        migrations.AddIndex(
            model_name='riskmatrixconfig',
            index=models.Index(fields=['organization', 'is_active'], name='risk_riskma_organiz_0bc4f2_idx'),
        ),
        migrations.AddIndex(
            model_name='riskregister',
            index=models.Index(fields=['organization', 'code'], name='risk_riskre_organiz_4a3803_idx'),
        ),
        migrations.AddIndex(
            model_name='riskregister',
            index=models.Index(fields=['register_name'], name='risk_riskre_registe_e540c8_idx'),
        ),
        migrations.AddIndex(
            model_name='riskregister',
            index=models.Index(fields=['register_period'], name='risk_riskre_registe_cac59a_idx'),
        ),
    ]
