# Generated by Django 5.1.8 on 2025-08-25 05:44

import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('organizations', '0002_initial'),
        ('risk', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='COBITDomain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('domain_code', models.CharField(choices=[('EDM', 'Evaluate, Direct and Monitor'), ('APO', 'Align, Plan and Organize'), ('BAI', 'Build, Acquire and Implement'), ('DSS', 'Deliver, Service and Support'), ('MEA', 'Monitor, Evaluate and Assess')], max_length=3, unique=True)),
                ('domain_name', models.CharField(max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Objectives')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'COBIT Domain',
                'verbose_name_plural': 'COBIT Domains',
            },
        ),
        migrations.CreateModel(
            name='COBITProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('process_code', models.CharField(db_index=True, max_length=10)),
                ('process_name', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('purpose', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Purpose')),
                ('goals', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Goals')),
                ('practices', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Practices')),
                ('inputs', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Inputs')),
                ('outputs', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Outputs')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.cobitdomain')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'COBIT Process',
                'verbose_name_plural': 'COBIT Processes',
            },
        ),
        migrations.CreateModel(
            name='COBITGovernance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('objective_type', models.CharField(choices=[('governance', 'Governance Objective'), ('management', 'Management Objective')], max_length=20)),
                ('objective_code', models.CharField(db_index=True, max_length=10)),
                ('objective_name', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('outcome_statements', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Outcome Statements')),
                ('stakeholder_responsibilities', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Stakeholder Responsibilities')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('related_processes', models.ManyToManyField(blank=True, to='risk.cobitprocess')),
            ],
            options={
                'verbose_name': 'COBIT Governance Objective',
                'verbose_name_plural': 'COBIT Governance Objectives',
            },
        ),
        migrations.CreateModel(
            name='COBITControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('control_code', models.CharField(db_index=True, max_length=20)),
                ('control_name', models.CharField(db_index=True, max_length=255)),
                ('control_type', models.CharField(choices=[('preventive', 'Preventive'), ('detective', 'Detective'), ('corrective', 'Corrective'), ('directive', 'Directive')], max_length=20)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('implementation_status', models.CharField(choices=[('not_implemented', 'Not Implemented'), ('partially_implemented', 'Partially Implemented'), ('fully_implemented', 'Fully Implemented')], default='not_implemented', max_length=25)),
                ('effectiveness_rating', models.CharField(choices=[('not_assessed', 'Not Assessed'), ('ineffective', 'Ineffective'), ('partially_effective', 'Partially Effective'), ('effective', 'Effective'), ('highly_effective', 'Highly Effective')], default='not_assessed', max_length=20)),
                ('last_assessment_date', models.DateField(blank=True, null=True)),
                ('next_assessment_date', models.DateField(blank=True, null=True)),
                ('control_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.cobitprocess')),
            ],
            options={
                'verbose_name': 'COBIT Control',
                'verbose_name_plural': 'COBIT Controls',
            },
        ),
        migrations.CreateModel(
            name='COBITCapability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('current_maturity', models.IntegerField(choices=[(0, 'Incomplete'), (1, 'Performed'), (2, 'Managed'), (3, 'Established'), (4, 'Predictable'), (5, 'Optimizing')], default=0)),
                ('target_maturity', models.IntegerField(choices=[(0, 'Incomplete'), (1, 'Performed'), (2, 'Managed'), (3, 'Established'), (4, 'Predictable'), (5, 'Optimizing')], default=3)),
                ('assessment_date', models.DateField(auto_now_add=True)),
                ('assessment_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Assessment Notes')),
                ('improvement_plan', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Improvement Plan')),
                ('next_assessment_date', models.DateField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.cobitprocess')),
            ],
            options={
                'verbose_name': 'COBIT Capability',
                'verbose_name_plural': 'COBIT Capabilities',
            },
        ),
        migrations.CreateModel(
            name='NISTFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('function_code', models.CharField(choices=[('ID', 'Identify'), ('PR', 'Protect'), ('DE', 'Detect'), ('RS', 'Respond'), ('RC', 'Recover')], max_length=2, unique=True)),
                ('function_name', models.CharField(max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('objectives', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Objectives')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'NIST Function',
                'verbose_name_plural': 'NIST Functions',
            },
        ),
        migrations.CreateModel(
            name='NISTCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('category_code', models.CharField(db_index=True, max_length=10)),
                ('category_name', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('outcomes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Outcomes')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.nistfunction')),
            ],
            options={
                'verbose_name': 'NIST Category',
                'verbose_name_plural': 'NIST Categories',
            },
        ),
        migrations.CreateModel(
            name='NISTIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('incident_id', models.CharField(db_index=True, max_length=50, unique=True)),
                ('incident_type', models.CharField(choices=[('data_breach', 'Data Breach'), ('malware', 'Malware'), ('phishing', 'Phishing'), ('ddos', 'DDoS Attack'), ('insider_threat', 'Insider Threat'), ('physical', 'Physical Security'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('detected', 'Detected'), ('analyzing', 'Analyzing'), ('contained', 'Contained'), ('eradicated', 'Eradicated'), ('recovered', 'Recovered'), ('lessons_learned', 'Lessons Learned'), ('closed', 'Closed')], default='detected', max_length=20)),
                ('detected_date', models.DateTimeField(auto_now_add=True)),
                ('affected_systems', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Affected Systems')),
                ('containment_actions', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Containment Actions')),
                ('eradication_actions', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Eradication Actions')),
                ('recovery_actions', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Recovery Actions')),
                ('lessons_learned', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Lessons Learned')),
                ('resolved_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('incident_team', models.ManyToManyField(blank=True, related_name='assigned_nist_incidents', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_nist_incidents', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'NIST Incident',
                'verbose_name_plural': 'NIST Incidents',
            },
        ),
        migrations.CreateModel(
            name='NISTSubcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('subcategory_code', models.CharField(db_index=True, max_length=15)),
                ('subcategory_name', models.CharField(db_index=True, max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('outcomes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Outcomes')),
                ('informative_references', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Informative References')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.nistcategory')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'NIST Subcategory',
                'verbose_name_plural': 'NIST Subcategories',
            },
        ),
        migrations.CreateModel(
            name='NISTImplementation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('current_maturity', models.IntegerField(choices=[(1, 'Partial'), (2, 'Risk Informed'), (3, 'Repeatable'), (4, 'Adaptive')], default=1)),
                ('target_maturity', models.IntegerField(choices=[(1, 'Partial'), (2, 'Risk Informed'), (3, 'Repeatable'), (4, 'Adaptive')], default=3)),
                ('implementation_status', models.CharField(choices=[('not_implemented', 'Not Implemented'), ('partially_implemented', 'Partially Implemented'), ('fully_implemented', 'Fully Implemented')], default='not_implemented', max_length=25)),
                ('assessment_date', models.DateField(auto_now_add=True)),
                ('assessment_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Assessment Notes')),
                ('implementation_plan', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Implementation Plan')),
                ('next_assessment_date', models.DateField(blank=True, null=True)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='risk.nistsubcategory')),
            ],
            options={
                'verbose_name': 'NIST Implementation',
                'verbose_name_plural': 'NIST Implementations',
            },
        ),
        migrations.CreateModel(
            name='NISTThreat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('threat_name', models.CharField(db_index=True, max_length=255)),
                ('threat_type', models.CharField(choices=[('adversarial', 'Adversarial'), ('accidental', 'Accidental'), ('structural', 'Structural'), ('environmental', 'Environmental')], max_length=20)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('likelihood', models.CharField(choices=[('rare', 'Rare'), ('unlikely', 'Unlikely'), ('possible', 'Possible'), ('likely', 'Likely'), ('certain', 'Certain')], max_length=20)),
                ('impact_analysis', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Impact Analysis')),
                ('affected_assets', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Affected Assets')),
                ('mitigation_strategies', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Mitigation Strategies')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('organization', models.ForeignKey(help_text='Organization that owns this record', on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization', verbose_name='organization')),
                ('related_subcategories', models.ManyToManyField(blank=True, to='risk.nistsubcategory')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last modified this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='updated by')),
            ],
            options={
                'verbose_name': 'NIST Threat',
                'verbose_name_plural': 'NIST Threats',
            },
        ),
        migrations.AddConstraint(
            model_name='cobitdomain',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_cobitdomain'),
        ),
        migrations.AddConstraint(
            model_name='cobitprocess',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_cobitprocess'),
        ),
        migrations.AlterUniqueTogether(
            name='cobitprocess',
            unique_together={('organization', 'process_code')},
        ),
        migrations.AddConstraint(
            model_name='cobitgovernance',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_cobitgovernance'),
        ),
        migrations.AddConstraint(
            model_name='cobitcontrol',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_cobitcontrol'),
        ),
        migrations.AddConstraint(
            model_name='cobitcapability',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_cobitcapability'),
        ),
        migrations.AddConstraint(
            model_name='nistfunction',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistfunction'),
        ),
        migrations.AddConstraint(
            model_name='nistcategory',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistcategory'),
        ),
        migrations.AlterUniqueTogether(
            name='nistcategory',
            unique_together={('organization', 'category_code')},
        ),
        migrations.AddConstraint(
            model_name='nistincident',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistincident'),
        ),
        migrations.AddConstraint(
            model_name='nistsubcategory',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistsubcategory'),
        ),
        migrations.AlterUniqueTogether(
            name='nistsubcategory',
            unique_together={('organization', 'subcategory_code')},
        ),
        migrations.AddConstraint(
            model_name='nistimplementation',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistimplementation'),
        ),
        migrations.AddConstraint(
            model_name='nistthreat',
            constraint=models.CheckConstraint(condition=models.Q(('organization__isnull', False)), name='organization_required_nistthreat'),
        ),
    ]
