# Generated by Django 5.1.8 on 2025-06-10 16:26

import django.core.validators
import django.utils.timezone
import django_ckeditor_5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Control',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(db_index=True, default='UNKNOWN', max_length=16, verbose_name='Control Code')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Control Name')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('control_type', models.CharField(choices=[('preventive', 'Preventive'), ('detective', 'Detective'), ('corrective', 'Corrective'), ('directive', 'Directive')], max_length=20, verbose_name='Control Type')),
                ('control_nature', models.CharField(choices=[('manual', 'Manual'), ('automated', 'Automated'), ('semi-automated', 'Semi-Automated')], max_length=20, verbose_name='Control Nature')),
                ('control_frequency', models.CharField(choices=[('continuous', 'Continuous'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually'), ('ad-hoc', 'Ad-hoc')], max_length=20, verbose_name='Control Frequency')),
                ('status', models.CharField(choices=[('implemented', 'Implemented'), ('in-progress', 'In Progress'), ('not-implemented', 'Not Implemented'), ('planned', 'Planned')], db_index=True, default='not-implemented', max_length=20, verbose_name='Control Status')),
                ('effectiveness_rating', models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Effectiveness Rating')),
                ('control_owner', models.CharField(db_index=True, max_length=100, verbose_name='Control Owner')),
                ('owner_department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Owner Department')),
                ('last_review_date', models.DateField(blank=True, null=True, verbose_name='Last Review Date')),
                ('next_review_date', models.DateField(blank=True, null=True, verbose_name='Next Review Date')),
                ('documentation', models.FileField(blank=True, null=True, upload_to='control_docs/', verbose_name='Documentation')),
            ],
            options={
                'verbose_name': 'Control',
                'verbose_name_plural': 'Controls',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='KRI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('name', models.CharField(max_length=255, verbose_name='KRI Name')),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('value', models.FloatField(verbose_name='Value')),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement (%, $, count, etc.)', max_length=50, null=True, verbose_name='Unit')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('threshold_warning', models.FloatField(help_text='Warning level threshold', verbose_name='Warning Threshold')),
                ('threshold_critical', models.FloatField(help_text='Critical level threshold', verbose_name='Critical Threshold')),
                ('direction', models.CharField(choices=[('increasing', 'Increasing values indicate higher risk'), ('decreasing', 'Decreasing values indicate higher risk')], default='increasing', max_length=20, verbose_name='Direction')),
                ('data_source', models.CharField(blank=True, help_text='Source of the KRI data', max_length=255, null=True, verbose_name='Data Source')),
                ('collection_frequency', models.CharField(blank=True, help_text='How often this KRI is collected', max_length=50, null=True, verbose_name='Collection Frequency')),
            ],
            options={
                'verbose_name': 'Key Risk Indicator',
                'verbose_name_plural': 'Key Risk Indicators',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(db_index=True, default='UNKNOWN', max_length=16, verbose_name='Risk Code')),
                ('risk_name', models.CharField(db_index=True, default='Unnamed Risk', max_length=512, verbose_name='Risk Name')),
                ('external_context', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='External Context')),
                ('internal_context', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Internal Context')),
                ('risk_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
                ('date_identified', models.DateField(default=django.utils.timezone.now, verbose_name='Date Identified')),
                ('identified_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='Identified By')),
                ('risk_owner', models.CharField(db_index=True, default='Unassigned', max_length=70, verbose_name='Risk Owner')),
                ('department', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Department')),
                ('category', models.CharField(choices=[('strategic', 'Strategic'), ('operational', 'Operational'), ('financial', 'Financial'), ('compliance', 'Compliance'), ('reputational', 'Reputational'), ('technological', 'Technological'), ('other', 'Other')], db_index=True, default='other', max_length=20, verbose_name='Risk Category')),
                ('inherent_impact_score', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Inherent Impact Score')),
                ('inherent_likelihood_score', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Inherent Likelihood Score')),
                ('inherent_risk_score', models.IntegerField(default=1, editable=False, verbose_name='Inherent Risk Score')),
                ('residual_impact_score', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Residual Impact Score')),
                ('residual_likelihood_score', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Residual Likelihood Score')),
                ('residual_risk_score', models.IntegerField(default=1, editable=False, verbose_name='Residual Risk Score')),
                ('risk_response_strategy', models.CharField(choices=[('mitigate', 'Mitigate/Reduce'), ('accept', 'Accept'), ('transfer', 'Transfer/Share'), ('avoid', 'Avoid/Terminate'), ('exploit', 'Exploit/Enhance')], default='mitigate', max_length=20, verbose_name='Risk Response Strategy')),
                ('risk_appetite', models.IntegerField(default=15, verbose_name='Risk Appetite')),
                ('controls_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Controls')),
                ('control_status', models.CharField(choices=[('implemented', 'Implemented'), ('in-progress', 'In Progress'), ('not-implemented', 'Not Implemented'), ('planned', 'Planned')], default='not-implemented', max_length=20, verbose_name='Control Status')),
                ('control_rating', models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Control Rating')),
                ('control_owner', models.CharField(blank=True, max_length=70, null=True, verbose_name='Control Owner')),
                ('control_last_review_date', models.DateField(blank=True, null=True, verbose_name='Last Control Review Date')),
                ('control_next_review_date', models.DateField(blank=True, null=True, verbose_name='Next Control Review Date')),
                ('action_plan', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Action Plan')),
                ('action_plan_status', models.CharField(choices=[('not-started', 'Not Started'), ('in-progress', 'In Progress'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='not-started', max_length=20, verbose_name='Action Plan Status')),
                ('action_owner', models.CharField(blank=True, max_length=70, null=True, verbose_name='Action Owner')),
                ('action_due_date', models.DateField(blank=True, null=True, verbose_name='Action Due Date')),
                ('kri_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='KRI Description')),
                ('kri_threshold', models.IntegerField(default=70, verbose_name='KRI Threshold')),
                ('next_review_date', models.DateField(blank=True, null=True, verbose_name='Next Review Date')),
                ('last_reviewed_date', models.DateField(blank=True, null=True, verbose_name='Last Reviewed Date')),
                ('last_reviewed_by', models.CharField(blank=True, max_length=70, null=True, verbose_name='Last Reviewed By')),
                ('status', models.CharField(choices=[('open', 'Open'), ('in-progress', 'In Progress'), ('closed', 'Closed'), ('archived', 'Archived')], db_index=True, default='open', max_length=20, verbose_name='Risk Status')),
                ('closure_date', models.DateField(blank=True, null=True, verbose_name='Closure Date')),
                ('closure_justification', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Closure Justification')),
                ('additional_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Additional Notes')),
            ],
            options={
                'verbose_name': 'Risk',
                'verbose_name_plural': 'Risks',
                'ordering': ['-updated_at', 'risk_name'],
            },
        ),
        migrations.CreateModel(
            name='RiskAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('assessment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Assessment Date')),
                ('assessor', models.CharField(max_length=100, verbose_name='Assessor')),
                ('impact_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Impact Score')),
                ('likelihood_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Likelihood Score')),
                ('risk_score', models.IntegerField(editable=False, verbose_name='Risk Score')),
                ('assessment_type', models.CharField(choices=[('inherent', 'Inherent Risk (before controls)'), ('residual', 'Residual Risk (after controls)'), ('target', 'Target Risk (desired state)')], max_length=20, verbose_name='Assessment Type')),
                ('notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Assessment Notes')),
            ],
            options={
                'verbose_name': 'Risk Assessment',
                'verbose_name_plural': 'Risk Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='RiskControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('effectiveness_rating', models.CharField(choices=[('effective', 'Effective'), ('partially-effective', 'Partially Effective'), ('ineffective', 'Ineffective'), ('not-assessed', 'Not Assessed')], default='not-assessed', max_length=20, verbose_name='Effectiveness Rating')),
            ],
            options={
                'verbose_name': 'Risk Control',
                'verbose_name_plural': 'Risk Controls',
            },
        ),
        migrations.CreateModel(
            name='RiskMatrixConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('name', models.CharField(default='Default Risk Matrix', max_length=100, verbose_name='Matrix Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('impact_levels', models.IntegerField(default=5, help_text='Number of impact levels (e.g., 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Impact Levels')),
                ('likelihood_levels', models.IntegerField(default=5, help_text='Number of likelihood levels (e.g., 5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Likelihood Levels')),
                ('low_threshold', models.IntegerField(default=5, help_text='Maximum score for low risk', verbose_name='Low Risk Threshold')),
                ('medium_threshold', models.IntegerField(default=10, help_text='Maximum score for medium risk', verbose_name='Medium Risk Threshold')),
                ('high_threshold', models.IntegerField(default=15, help_text='Maximum score for high risk', verbose_name='High Risk Threshold')),
                ('very_high_threshold', models.IntegerField(default=20, help_text='Maximum score for very high risk', verbose_name='Very High Risk Threshold')),
                ('low_color', models.CharField(default='#00FF00', help_text='Color code for low risk (e.g., #00FF00)', max_length=7, verbose_name='Low Risk Color')),
                ('medium_color', models.CharField(default='#FFFF00', help_text='Color code for medium risk (e.g., #FFFF00)', max_length=7, verbose_name='Medium Risk Color')),
                ('high_color', models.CharField(default='#FFA500', help_text='Color code for high risk (e.g., #FFA500)', max_length=7, verbose_name='High Risk Color')),
                ('very_high_color', models.CharField(default='#FF0000', help_text='Color code for very high risk (e.g., #FF0000)', max_length=7, verbose_name='Very High Risk Color')),
                ('critical_color', models.CharField(default='#800000', help_text='Color code for critical risk (e.g., #800000)', max_length=7, verbose_name='Critical Risk Color')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Matrix')),
            ],
            options={
                'verbose_name': 'Risk Matrix Configuration',
                'verbose_name_plural': 'Risk Matrix Configurations',
            },
        ),
        migrations.CreateModel(
            name='RiskRegister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the record was first created', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Timestamp when the record was last updated', verbose_name='updated at')),
                ('code', models.CharField(db_index=True, default='UNKNOWN', max_length=16, verbose_name='Register Code')),
                ('register_name', models.CharField(db_index=True, max_length=255, verbose_name='Register Name')),
                ('register_creation_date', models.DateField(auto_now_add=True, verbose_name='Creation Date')),
                ('register_period', models.CharField(max_length=4, verbose_name='Period')),
                ('register_description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Risk Register',
                'verbose_name_plural': 'Risk Registers',
                'ordering': ['-register_creation_date', 'register_name'],
            },
        ),
    ]
